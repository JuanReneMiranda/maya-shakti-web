{"mappings":"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","sources":["src/js/main.js"],"sourcesContent":["let now_playing = document.querySelector(\".now-playing\");\r\nlet track_art = document.querySelector(\".track-art\");\r\nlet track_name = document.querySelector(\".track-name\");\r\nlet track_artist = document.querySelector(\".track-artist\");\r\n\r\nlet playpause_btn = document.querySelector(\".playpause-track\");\r\nlet next_btn = document.querySelector(\".next-track\");\r\nlet prev_btn = document.querySelector(\".prev-track\");\r\n\r\nlet seek_slider = document.querySelector(\".seek_slider\");\r\nlet volume_slider = document.querySelector(\".volume_slider\");\r\nlet curr_time = document.querySelector(\".current-time\");\r\nlet total_duration = document.querySelector(\".total-duration\");\r\n\r\nlet track_index = 0;\r\nlet isPlaying = false;\r\nlet updateTimer;\r\n\r\n// Create new audio element\r\nlet curr_track = document.createElement('audio');\r\n\r\n// Define the tracks that have to be played\r\nlet track_list = [\r\n  {\r\n    name: \"Mad Cow Somatic Cell\",\r\n    artist: \"Knock Out\",\r\n    image: \"https://mayashaktirecords.com/music_web/knockout.jpg\",\r\n    path: \"https://mayashaktirecords.com/music_web/MadCowSomaticCell.mp3\"\r\n  },\r\n  {\r\n    name: \"Alien Information\",\r\n    artist: \"Humalien & Cloviz\",\r\n    image: \"https://mayashaktirecords.com/music_web/humalien.jpeg\",\r\n    path: \"https://mayashaktirecords.com/music_web/AlienInformation.mp3\"\r\n  },\r\n  {\r\n    name: \"Reflections\",\r\n    artist: \"Indemonium\",\r\n    image: \"https://mayashaktirecords.com/music_web/indemonium.jpg\",\r\n    path: \"https://mayashaktirecords.com/music_web/Reflections.mp3\",\r\n  },\r\n];\r\n\r\n// function random_bg_color() {\r\n\r\n//   // Get a number between 64 to 256 (for getting lighter colors)\r\n//   let red = Math.floor(Math.random() * 256) + 64;\r\n//   let green = Math.floor(Math.random() * 256) + 64;\r\n//   let blue = Math.floor(Math.random() * 256) + 64;\r\n\r\n//   // Construct a color withe the given values\r\n//   let bgColor = \"rgb(\" + red + \",\" + green + \",\" + blue + \")\";\r\n\r\n//   // Set the background to that color\r\n//   document.body.style.background = bgColor;\r\n// }\r\n\r\nfunction loadTrack(track_index) {\r\n  clearInterval(updateTimer);\r\n  resetValues();\r\n  curr_track.src = track_list[track_index].path;\r\n  curr_track.load();\r\n\r\n  track_art.style.backgroundImage = \"url(\" + track_list[track_index].image + \")\";\r\n  track_name.textContent = track_list[track_index].name;\r\n  track_artist.textContent = track_list[track_index].artist;\r\n  now_playing.textContent = \"PLAYING \" + (track_index + 1) + \" OF \" + track_list.length;\r\n\r\n  updateTimer = setInterval(seekUpdate, 1000);\r\n  curr_track.addEventListener(\"ended\", nextTrack);\r\n  // random_bg_color();\r\n}\r\n\r\nfunction resetValues() {\r\n  curr_time.textContent = \"00:00\";\r\n  total_duration.textContent = \"00:00\";\r\n  seek_slider.value = 0;\r\n}\r\n\r\n// Load the first track in the tracklist\r\nloadTrack(track_index);\r\n\r\nfunction playpauseTrack() {\r\n  if (!isPlaying) playTrack();\r\n  else pauseTrack();\r\n}\r\n\r\nfunction playTrack() {\r\n  curr_track.play();\r\n  isPlaying = true;\r\n  playpause_btn.innerHTML = '<i class=\"fa fa-pause-circle fa-5x\"></i>';\r\n}\r\n\r\nfunction pauseTrack() {\r\n  curr_track.pause();\r\n  isPlaying = false;\r\n  playpause_btn.innerHTML = '<i class=\"fa fa-play-circle fa-5x\"></i>';;\r\n}\r\n\r\nfunction nextTrack() {\r\n  if (track_index < track_list.length - 1)\r\n    track_index += 1;\r\n  else track_index = 0;\r\n  loadTrack(track_index);\r\n  playTrack();\r\n}\r\n\r\nfunction prevTrack() {\r\n  if (track_index > 0)\r\n    track_index -= 1;\r\n  else track_index = track_list.length;\r\n  loadTrack(track_index);\r\n  playTrack();\r\n}\r\n\r\nfunction seekTo() {\r\n  let seekto = curr_track.duration * (seek_slider.value / 100);\r\n  curr_track.currentTime = seekto;\r\n}\r\n\r\nfunction setVolume() {\r\n  curr_track.volume = volume_slider.value / 100;\r\n}\r\n\r\nfunction seekUpdate() {\r\n  let seekPosition = 0;\r\n\r\n  if (!isNaN(curr_track.duration)) {\r\n    seekPosition = curr_track.currentTime * (100 / curr_track.duration);\r\n\r\n    seek_slider.value = seekPosition;\r\n\r\n    let currentMinutes = Math.floor(curr_track.currentTime / 60);\r\n    let currentSeconds = Math.floor(curr_track.currentTime - currentMinutes * 60);\r\n    let durationMinutes = Math.floor(curr_track.duration / 60);\r\n    let durationSeconds = Math.floor(curr_track.duration - durationMinutes * 60);\r\n\r\n    if (currentSeconds < 10) { currentSeconds = \"0\" + currentSeconds; }\r\n    if (durationSeconds < 10) { durationSeconds = \"0\" + durationSeconds; }\r\n    if (currentMinutes < 10) { currentMinutes = \"0\" + currentMinutes; }\r\n    if (durationMinutes < 10) { durationMinutes = \"0\" + durationMinutes; }\r\n\r\n    curr_time.textContent = currentMinutes + \":\" + currentSeconds;\r\n    total_duration.textContent = durationMinutes + \":\" + durationSeconds;\r\n  }\r\n}\r\n\r\n\r\n"],"names":[],"version":3,"file":"index.aa69868b.js.map","sourceRoot":"/__parcel_source_root/"}